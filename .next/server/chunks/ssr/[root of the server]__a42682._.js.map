{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/sen_b6f2dfc1.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"className\": \"sen_b6f2dfc1-module__hp3wkG__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/sen_b6f2dfc1.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22sen.tsx%22,%22import%22:%22Sen%22,%22arguments%22:[{%22weight%22:[%22400%22,%22700%22],%22style%22:[%22normal%22],%22subsets%22:[%22latin%22],%22display%22:%22swap%22}],%22variableName%22:%22sen%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Sen', 'Sen Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,sJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,sJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,sJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/ilakopendoh/Desktop/portfolio/public/fonts/sen.tsx"],"sourcesContent":["import { Roboto, Sen } from \"next/font/google\";\n\nconst sen = Sen({\n\tweight: ['400', '700'],\n\tstyle: ['normal'],\n\tsubsets: ['latin'],\n\tdisplay: 'swap',\n  });\n  \n  export default sen;"],"names":[],"mappings":";;;;;uCASiB,uIAAA,CAAA,UAAG"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///Users/ilakopendoh/Desktop/portfolio/src/app/layout.tsx"],"sourcesContent":["\"use client\";\nimport { NextIntlClientProvider } from \"next-intl\";\nimport { getLocale, getMessages } from \"next-intl/server\";\nimport type { Metadata } from \"next\";\nimport { useState, useEffect } from \"react\";\nimport \"./styles/globals.css\";\nimport sen from \"../../public/fonts/sen\";\nimport \"./styles/reset.css\";\n\n\nexport default async function RootLayout({ children }: { children: React.ReactNode }) {\n  const locale = await getLocale(); // Получаем локаль на сервере\n  const messages = await getMessages(); // Получаем сообщения для текущей локали\n\n  // Клиентский стейт для языка\n  const [currentLocale, setCurrentLocale] = useState(locale);\n  const [currentMessages, setCurrentMessages] = useState(messages);\n\n  useEffect(() => {\n    // Динамическая загрузка сообщений при изменении локали\n    const loadMessages = async () => {\n      const messages = await import(`../../public/locales/${currentLocale}.json`);\n      setCurrentMessages(messages.default);\n    };\n\n    loadMessages();\n  }, [currentLocale]);\n\n  return (\n    <html lang={currentLocale}>\n      <body className={`${sen.className}`}>\n        <NextIntlClientProvider messages={currentMessages}>\n          {children}\n          <div>\n            <button onClick={() => setCurrentLocale(\"en\")}>English</button>\n            <button onClick={() => setCurrentLocale(\"ru\")}>Русский</button>\n          </div>\n        </NextIntlClientProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;AAIA;AAEA;AAJA;AADA;AADA;;;;;;;;AAUe,eAAe,WAAW,EAAE,QAAQ,EAAiC;IAClF,MAAM,SAAS,MAAM,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,KAAK,6BAA6B;IAC/D,MAAM,WAAW,MAAM,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,KAAK,wCAAwC;IAE9E,6BAA6B;IAC7B,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,uDAAuD;QACvD,MAAM,eAAe;YACnB,MAAM,WAAW;;;;;;;;;sBAAa,CAAC,qBAAqB,EAAE,cAAc,KAAK,CAAC;YAC1E,mBAAmB,SAAS,OAAO;QACrC;QAEA;IACF,GAAG;QAAC;KAAc;IAElB,qBACE,8OAAC;QAAK,MAAM;kBACV,cAAA,8OAAC;YAAK,WAAW,GAAG,uHAAA,CAAA,UAAG,CAAC,SAAS,EAAE;sBACjC,cAAA,8OAAC,gKAAA,CAAA,yBAAsB;gBAAC,UAAU;;oBAC/B;kCACD,8OAAC;;0CACC,8OAAC;gCAAO,SAAS,IAAM,iBAAiB;0CAAO;;;;;;0CAC/C,8OAAC;gCAAO,SAAS,IAAM,iBAAiB;0CAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM3D"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}